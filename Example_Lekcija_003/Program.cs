// Виды Метотов

Console.WriteLine();
Console.WriteLine();

// --------------------------------------------------------------------------------------------------------------------------


// Вид 1     Ничего не возврошает и ничего не принимает. 

Console.WriteLine("Вид 1");
void Method1()   // Нет нкакиз Аргументов 
{
    Console.WriteLine("Автор ...");  // Тело метода который может чтото вывадить на Экран. 
}

Method1();    // Таким оброзом вызываем сам метод.

Console.WriteLine();
Console.WriteLine();


// --------------------------------------------------------------------------------------------------------------------------


// Вид 2.   Ничего не возврашают но могут принять какие то аргументы. 

Console.WriteLine("Вид 2");

void Method2(string msg)  // Method2 - название Аргумента.   string - Идентификатор, msg - какоето количество аргументов.
{
    Console.WriteLine(msg);
}

Method2("Текст сообшения");     // Таким оброзом вызываем сам метод.

Console.WriteLine();
Console.WriteLine();

Console.WriteLine("Вид 2  С именнованими Аргументами");

void Method21(string msg, int count)  // Method2 - название Аргумента.   string - Идентификатор(Тип арнумента), msg - какоето количество аргументов.
{
    int i = 0;                // Задали переменную i для счёта количество повторений.
    while (i < count)         // Условия повторения цикла
    {
        Console.WriteLine(msg);    // Выводим текст. 
        i++;                       // Увеличиваем i и делаем цикл сначало. 
    }
    
}

Method21("Текст сообшения", 4);     // Таким оброзом вызываем сам метод.  4 обозначает количество повторений. Принимает значения а 'count'
Console.WriteLine();
Method21(count: 4, msg: "Текст сообшения 2 " );   //  Также можно указитать какое значения к какому аргументу.
                                                //   присваивать. Можно писать и не по порядку

Console.WriteLine();
Console.WriteLine();


// --------------------------------------------------------------------------------------------------------------------------


// Вид 3   каторые чтото возврашают но ничего не принимают. 
Console.WriteLine("Вид 3   каторые чтото возврашают но ничего не принимают. ");


int Method3()        //  Если метод чтото возврошает, значит мы в обязательном порядке должны указать тип данных,
                     // значения которого мы ожидаем. Например 'int'
{
    return DateTime.Now.Year;            // обязательно изпользовать Оператор 'return'   
}

int year = Method3();    //  В переменную 'year' положили результат работы меода 'Method3'
Console.WriteLine(year);    // ваводим переменную на кансоль




Console.WriteLine();
Console.WriteLine();

// --------------------------------------------------------------------------------------------------------------------------


// Вид 4  -   Который чтото принимают и чтото возврашают. 

Console.WriteLine("Вид 4  -   Который чтото принимают и чтото возврашают. " );

string Method4(int count, string text)    // Мы создали переменную строку 'Method4', В котором будем строку 'text' друг за 
                                      // другом компоновать 'count' раз.   
{
    int q = 0;
    string result = String.Empty;     //  String.Empty обозначает пустая строка. 
    while (q < count)
    {
        result = result + text;     // Пока 'q < count'  мы в переменную 'result' прибослаем 'text'
        q++;
    }
    return result;   //  в оператор 'return' указываем тот результат или переменную которую ожидаем получить из метода.

}

string res = Method4(10, "OK.");  // Создали переменную в которой указали метод 'Method4' в каторую мы присвоили 'coutt' = 10
                                 //  'text' = ok.
Console.WriteLine(res);




Console.WriteLine();
Console.WriteLine();

// ---------------------------------------------------------------------------------------------------------------------------------

// Вид 4  -   Который чтото принимают и чтото возврашают. 

Console.WriteLine("Вид 4  -   Который чтото принимают и чтото возврашают но с изпользованием цикла for. " );

string Method5(int count1, string text1)    // Мы создали переменную строку 'Method4', В котором будем строку 'text' друг за 
                                      // другом компоновать 'count' раз.   
{
    int w = 0;
    string result1 = String.Empty;     //  String.Empty обозначает пустая строка. 
    for (int i = 0; w < count1; w++)    // Структура цикла 'for': Сначало идйт инацилизация счётчика 'int i = 0', 
                                        // далее проверка условия 'w < count1', и после инкримень 'w++'
    {
        result1 = result1 + text1;     // Пока 'q < count'  мы в переменную 'result' прибослаем 'text'
    }
    return result1;   //  в оператор 'return' указываем тот результат или переменную которую ожидаем получить из метода.

}

string res1 = Method5(10, "OK.");  // Создали переменную в которой указали метод 'Method4' в каторую мы присвоили 'coutt' = 10
                                 //  'text' = ok.
Console.WriteLine(res1);




Console.WriteLine();
Console.WriteLine();    

// ----------------------------------------------------------------------------------------------------------------------------------

// Цыкл в цыклк:  Задача вывода таблицы умножения на экран. 

Console.WriteLine("Задача вывода таблицы умножения на экран.");


for (int e = 2; e <= 10; e++)     //  
{
    for (int r = 2; r <= 10; r++)
    {
        Console.WriteLine($"{e} x {r} = {e * r}");    // Этот способ називается Интерпаляция строк.
    }
    Console.WriteLine();
}


// -----------------------------------------------------------------------------------------------------------------------------------

Дан текст. В тексте нужно все пробелы заменить черточками,
маленькие буквы “к” заменить большими “К”, а большие “С” заменить
маленькими “с”.


string text = "— Я думаю, — сказал князь, улыбаясь, — что, "
            + "ежели бы вас послали вместо нашего милого"
            + "Винценгероде, вы бы взяли приступом согласие"
            + "прусского короля. Вы так красноречивы. Вы"
            + "дадите мне чаю?";


// string s = "qwert"
//             0123
//        s[3] = r




string Replace(string text, char oldValue, char newValue)   // Метод назвали 'Replace', 'string text2' - Это вхадной текст.
//                                                              'char oldValue' - канкретный синвал каторый меняется.
//                                                              'char newValue' - канкретный синвал на каторый менаем.

{
    string result = String.Empty;    //  Заводим новую пустую строку 'result3' ' String.Empty' - иницализация новой пустой строки.
    
    int length = text.Length;    // Определаем длину строки
    for (int i = 0; i < length; i++)  // С помошю цикла 'for' Мы пробигаем от 0 символа до донца нашей строки 'length - длина'
    {
        if(text[i] == oldValue) result = result + $"{newValue}";   // Если текуший синвол 'text2[t]' совпал с те мсимволом 
        //                                                      которым зотим заменить. 'oldValue' то в результать 'result3' 
        //                                                      мы должны положить новое значения в виде страки 'newValue'
        
        else result = result + $"{text[i]}";                   // Если васподений нет но в 'result3' кладём тот символ который и был. 
    }



    return result;  // Возврашаем страку result3
}

string newValue = Replace(text, ' ', '|');
Console.WriteLine(newValue);
Console.WriteLine();
newValue = Replace(newValue, 'к', 'К');
Console.WriteLine(newValue);
Console.WriteLine();
newValue = Replace(newValue, 'С', 'с');
Console.WriteLine(newValue);


// // --------------------------------------------------------------------------------------------------------

// Упорядочивания Массива. 

int[] arr = {1 , 5 , 4, 3, 2, 6, 7, 1, 1};    // Сам массив с значениями. 

void PrintArrray(int[] array)           //  Метод для вывода на экран массива.
{
    int count = array.Length;

    for (int i = 0; i < count; i++)
    {
        Console.Write($"{array[i]} ");
    }
    Console.WriteLine();
}

void SelectionSort(int[] array)
{   

    for (int i = 0; i < array.Length - 1 ; i++)
    {
        int minPosition = i;
        
        for (int j = i + 1; j < array.Length; j++)
        {
            if(array[j] < array[minPosition]) minPosition = j;
        }

        int temporare = array[i];
        array[i] = array[minPosition];
        array[minPosition] = temporare;

    }
}


PrintArrray(arr);                  // Мывод на экран массива. 
SelectionSort(arr);
PrintArrray(arr);                  // Мывод на экран массива
